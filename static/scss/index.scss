@import "./_global";

.page {
  &__inner {
    min-height: inherit;
  }
}

.auth {
  min-height: inherit;

  &__inner {
    min-height: inherit;
    max-width: 1000px;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  &__block {
    &:not(:last-child) {
      margin-right: 15px;
    }

    display: flex;
    flex-direction: column;

    &-title {
      padding-bottom: 10px;
      @extend %roboto-mono-400;
      text-transform: lowercase;
    }
  }
}

.form {
  display: flex;
  flex-direction: column;

  &__field {
    &:not(:last-child) {
      margin-bottom: 10px;
    }
  }

  &__label {
    width: 100%;
    position: relative;

    &::after {
      content: "";
      position: absolute;
      width: 8px;
      height: 8px;
      border-radius: 8px;
      top: 0;
      bottom: 0;
      margin: auto 0;
      right: 15px;
      background: $yellow;
      opacity: 0;
      transition: background, opacity, .3s;
    }
  }

  &__input {
    width: 240px;
    border: none;
    background: $black;
    caret-color: $yellow;
    color: $grey;
    padding: 8px 35px 8px 8px;
    border-radius: 8px;

    &:focus {
      color: $lightGrey;
    }
  }

  &__submit-block {
    margin-top: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  &__submit {
    cursor: pointer;
    background: $black;
    padding: 8px;
    color: $lightGrey;
    border: none;
    border-radius: 8px;
    transition: color, background, .2s;

    &:hover {
      color: $black;
      background: $lightGrey;
    }
  }
}

.invalid-input {
  &::after {
    background: $red;
  }
}

.show {
  &::after {
    opacity: 1;
  }
}

.notifications {
  position: fixed;
  top: 0;
  right: 0;
  z-index: 9999999;
  padding: 10px;
}

.notification {
  border-radius: 8px;
  padding: 15px;
  width: 380px;

  &__title {
    font-size: 15px;
    color: $dark;
    @extend %roboto-mono-400;
    padding-bottom: 5px;
  }

  &__desc {
    color: $black;
    font-size: 17px;
  }

  &--error {
    background: $red;
  }

  &--warning {
    background: $yellow;
  }

  &--success {
    background: $green;
  }
}

.header {
  margin-bottom: 15px;
  padding: 20px 0;

  &__list {
    display: flex;
    align-items: center;

    &-item {
      &:not(:last-child) {
        margin-right: 15px;
      }
    }

    &-link {
      color: $grey;
      transition: color .3s;
      font-size: 14px;

      &:hover {
        color: $lightGrey;
      }
    }

    &-signout {
      margin-left: auto;
    }

    &-user {
      display: flex;
      align-items: center;

      &-level {
        padding: 1px 2px;
        display: inline-block;
        border-radius: 2px;
        background: $grey;
        color: $dark;
        font-size: 12px;
        margin-left: 4px;
      }
    }
  }
}

.testing {
  height: 90vh;

  &__inner {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: relative;
  }

  &-focus {
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 9999;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 1;
    transition: opacity .3s;

    &--hide {
      opacity: 0;
    }

    &__inner {
      display: flex;
      align-items: center;
    }

    &__icon {
      fill: $lightGrey;
      margin-right: 10px;
      width: 40px;
    }
  }

  &__text {
    line-height: 30px;
    width: 100%;
    transition: opacity, filter, .3s;
    user-select: none;

    &--disabled {
      opacity: .5;
      filter: blur(3px);
    }
  }

  &__letter {
    font-size: 25px;
    color: $grey;
    transition: color .3s;
    padding: .5px;

    &--active {
      position: relative;

      &::after {
        content: "";
        position: absolute;
        height: 1px;
        border-radius: 5px;
        background: $yellow;
        left: 0;
        bottom: 0;
        right: 0;
        margin: 0 auto;
        transition: background .3s;
        animation: change-width .8s infinite alternate;
      }
    }

    &--complete {
      color: $lightGrey;

      &::after {
        background: $lightGrey;
      }
    }

    &--failure {
      color: $red;

      &::after {
        background: $red;
      }
    }
  }
}

@keyframes change-width {
  0% {
    width: 50%;
  }

  100% {
    width: 100%;
  }
}